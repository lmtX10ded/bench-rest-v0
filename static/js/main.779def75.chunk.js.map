{"version":3,"sources":["fetch.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","a","console","log","allXtions","allPromiseData","get","then","response","data","transactions","i","push","Promise","all","combineXtions","length","concat","catch","errmsg","Content","state","loading","error","this","finalXtions","fetchXtions","setState","totalAmount","reduce","x","y","parseFloat","className","align","scope","map","Data","Date","Company","Ledger","Amount","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAGMA,E,OAAMC,EAAMC,OAAO,CACrBC,QAAS,4C,4CAIE,8BAAAC,EAAA,6DACXC,QAAQC,IAAI,sBAERC,EAAY,GACI,GAChBC,EAAiB,GALV,SAMLR,EACGS,IADH,UAEGC,KAFH,+BAAAN,EAAA,MAES,WAAOO,GAAP,mBAAAP,EAAA,sDAGH,IADAG,EAAYI,EAASC,KAAKC,aAClBC,EAAE,EAAEA,EAAE,EAAEA,IACZN,EAAeO,KAAKf,EAAIS,IAAJ,UAAWK,EAAX,WAJrB,gBAMuBE,QAAQC,IAAIT,GANnC,OAQH,IAFIU,EAND,OAQKJ,EAAE,EAAEA,EAAEI,EAAcC,OAAOL,IAC/BP,EAAYA,EAAUa,OAAOF,EAAcJ,GAAGF,KAAKC,cATpD,2CAFT,uDAgBGQ,OAAO,SAAAC,OAtBL,gCAyBIf,GAzBJ,4C,0BCQTgB,E,4MAEFC,MAAQ,CACNC,SAAS,EACTZ,aAAc,GACda,MAAO,M,kEAILrB,QAAQC,IAAI,4BACZqB,KAAKC,gB,oCAGK,IAAD,OACTvB,QAAQC,IAAI,sBDtBL,WAAf,+BCuBQuB,GACCnB,MAAM,SAAAG,GACL,EAAKiB,SAAS,CACVjB,aAAcA,EACdY,SAAS,IACTpB,QAAQC,IAAIO,Q,+BAKlB,IAAMkB,EAAcJ,KAAKH,MAAMX,aAAamB,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIE,WAAWD,EAAC,SAAe,IAAE,GAC9F,OACI,sBAAKE,UAAU,YAAf,UACI,oBAAIA,UAAU,UAAd,wBACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,MAAf,SACI,wBAAOA,UAAU,eAAeC,MAAM,SAAtC,UACI,gCACI,+BACI,oBAAIC,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,qBACA,oBAAIA,MAAM,MAAV,qBACA,qBAAIA,MAAM,MAAV,cAAkBP,UAG1B,gCACKJ,KAAKH,MAAMX,aAAa0B,KAAK,SAAAC,GAC1B,OACI,+BACI,oBAAIJ,UAAU,OAAd,SAAsBI,EAAKC,OAC3B,6BAAKD,EAAKE,UACV,oBAAIN,UAAU,OAAd,SAAsBI,EAAKG,SAC3B,6BAAKH,EAAKI,+B,GA/ChCC,IAAMC,WA6DbC,EAxEf,WACE,OACE,qBAAKX,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACA,cAAC,EAAD,SCGSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxC,MAAK,YAAkD,IAA/CyC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.779def75.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://resttest.bench.co/transactions/',\n})\n\n\nexport default async function fetchXtions() {\n    console.log('fetchXtions loaded');\n\n    let allXtions = [];\n    let combineXtions = [];\n    let allPromiseData = [];\n    await api\n            .get(`1.json`)\n            .then( async (response) => {\n\n                allXtions = response.data.transactions;\n                for(let i=1;i<5;i++){\n                    allPromiseData.push(api.get(`${i}.json`))\n                }\n                let combineXtions = await Promise.all(allPromiseData);\n                {/*console.log(combineXtions.length);*/}\n                for(let i=1;i<combineXtions.length;i++){\n                    allXtions = allXtions.concat(combineXtions[i].data.transactions);\n\n                }\n\n            })\n            .catch( errmsg => {\n\n            })\n            return allXtions\n}\n","import React from 'react';\nimport './App.css';\n\nimport fetchXtions from './fetch.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      <Content />\n      </header>\n    </div>\n  );\n}\n\n\nclass Content extends React.Component{\n\n    state = {\n      loading: false,\n      transactions: [],\n      error: null\n    };\n\n    componentDidMount(){\n        console.log('componentDidMount loaded');\n        this.finalXtions();\n    }\n\n    finalXtions(){\n        console.log('finalXtions loaded');\n        fetchXtions()\n        .then( transactions => {\n          this.setState({\n              transactions: transactions,\n              loading: false });\n              console.log(transactions);\n        })\n    }\n\n    render(){\n        const totalAmount = this.state.transactions.reduce((x, y) => x + parseFloat(y[\"Amount\"]) || 0,0 )\n        return(\n            <div className='container'>\n                <h3 className='heading'>Bench Test</h3>\n                <div className='row'>\n                    <div className='col'>\n                        <table className=\"defaultTable\" align=\"center\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">Date</th>\n                                    <th scope=\"col\">Company</th>\n                                    <th scope=\"col\">Account</th>\n                                    <th scope=\"col\">${totalAmount}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.transactions.map( Data => {\n                                    return(\n                                        <tr>\n                                            <td className='col1'>{Data.Date}</td>\n                                            <td>{Data.Company}</td>\n                                            <td className='col1'>{Data.Ledger}</td>\n                                            <td>{Data.Amount}</td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}